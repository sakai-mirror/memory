<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

   <!-- This bean is the heart and soul of this project and the only access point 
        that should be used from outside it -->
   <bean id="org.sakaiproject.memory.api.MemoryService"
      class="org.sakaiproject.memory.impl.BasicMemoryService" 
      init-method="init"
      destroy-method="destroy">
      <property name="cacheManager" ref="org.sakaiproject.memory.api.MemoryService.cacheManager" />
      <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService.LAZY" />
      <property name="sessionManager" ref="org.sakaiproject.tool.api.SessionManager.LAZY" />
      <!-- TODO - remove this injection -AZ -->
      <property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
   </bean>

   <!-- Fire this up lazy to break the circular dependency chain (both these depend on each other) -->
   <bean id="org.sakaiproject.authz.api.SecurityService.LAZY"
      class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="targetSource">
         <bean class="org.springframework.aop.target.LazyInitTargetSource">
            <property name="targetBeanName">
               <idref bean="org.sakaiproject.authz.api.SecurityService" />
            </property>
         </bean>
      </property>
   </bean>

   <!-- Fire this up lazy just to make sure memory service starts up nice and early -->
   <bean id="org.sakaiproject.tool.api.SessionManager.LAZY"
      class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="targetSource">
         <bean class="org.springframework.aop.target.LazyInitTargetSource">
            <property name="targetBeanName">
               <idref bean="org.sakaiproject.tool.api.SessionManager" />
            </property>
         </bean>
      </property>
   </bean>

   <import resource="ehcache-beans.xml"/>

</beans>
